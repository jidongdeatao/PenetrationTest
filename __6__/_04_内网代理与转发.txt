1.正向代理与反向代理
    1.1 正向代理(Forward Proxy)
    Lhost－－》proxy－－》Rhost
    Lhost为了访问到Rhost，向proxy发送了一个请求并且指定目标是Rhost，然后proxy向Rhost转交请求并将获得的内容返回给Lhost，
    简单来说正向代理就是proxy代替了我们去访问Rhost。
    1.2 反向代理（reverse proxy）
    Lhost<--->proxy<--->firewall<--->Rhost
    和正向代理相反（废话），Lhost只向proxy发送普通的请求，具体让他转到哪里，proxy自己判断，然后将返回的数据递交回来，
    这样的好处就是在某些防火墙只允许proxy数据进出的时候可以有效的进行穿透
    1.3 简单区分
    正向代理是我们自己(Lhost)戴套(proxy)插进去，反向代理是她(Rhost)主动通过上位(proxy)坐上来(Lhost)

2.内网代理的方式
    2.1 VPN隧道／SSH隧道
    这种代理方式需要比较高的权限(system/root)直接使用系统功能来开启内网代理的隧道，配置VPN都比较简单，这里不做赘述，
    我们看一看通过SSH隧道进行代理
    ssh -qTfnN -L port:host:hostport -l user remote_ip   #正向隧道，监听本地port
    ssh -qTfnN -R port:host:hostport -l user remote_ip   #反向隧道，用于内网穿透防火墙限制之类
    SSH -qTfnN -D port remotehost   #直接进行socks代理

    参数详解：
    -q Quiet mode. 安静模式
    -T Disable pseudo-tty allocation. 不占用 shell 了
    -f Requests ssh to go to background just before command execution. 后台运行，并推荐加上 -n 参数
    -N Do not execute a remote command. 不执行远程命令，端口转发就用它了～

    有时候，我们手边没有端口转发的工具，也可以通过ssh来做端口转发
    ssh -CfNg -L port1:127.0.0.1:port2 user@host    #本地转发
    ssh -CfNg -R port2:127.0.0.1:port1 user@host    #远程转发
